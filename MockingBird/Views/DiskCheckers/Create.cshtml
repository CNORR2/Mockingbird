@model MockingBird.Models.DiskChecker

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Add a Disk to Monitor</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <table width="2000">
            <tr>
                <td valign="top" style="width: 700px;">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ServerName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.ServerName, ViewBag.ServerList as SelectList, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ServerName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DriveLetter, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DriveLetter, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DriveLetter, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LowDiskPercentage, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.LowDiskPercentage, ViewBag.Integer100List as SelectList, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.LowDiskPercentage, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PollTime, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.PollTime, ViewBag.EmailAlertMinuteList as SelectList, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PollTime, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SubcriptionEmailAddresses, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.SubcriptionEmailAddresses, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SubcriptionEmailAddresses, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </td>
                <td valign="top">
                    <div class="form-group">
                        @Html.LabelFor(model => model.AdminEmailAlert, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.AdminEmailAlert)
                                @Html.ValidationMessageFor(model => model.AdminEmailAlert, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AlertSubscribers, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.AlertSubscribers)
                                @Html.ValidationMessageFor(model => model.AlertSubscribers, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Disable, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Disable)
                                @Html.ValidationMessageFor(model => model.Disable, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ShowOnDash, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.ShowOnDash)
                                @Html.ValidationMessageFor(model => model.ShowOnDash, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    @Html.HiddenFor(model => model.LastRan, new { @Value = DateTime.Now.ToString("dd/MM/yyyy HH:mm:ss") })
                    @Html.HiddenFor(model => model.DriveSize, new { @Value = 0.00 })
                    @Html.HiddenFor(model => model.AvailableSpace, new { @Value = 0.00 })

                    <div class="form-group">
                        @Html.LabelFor(model => model.IgnorePollTimeOnNextRun, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.IgnorePollTimeOnNextRun)
                                @Html.ValidationMessageFor(model => model.IgnorePollTimeOnNextRun, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </td>
            </tr>
        </table>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
